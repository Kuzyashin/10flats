# Generated by Django 2.2 on 2019-05-14 18:36

import core.mixins.model_mixins
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('properites', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('profiles', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='RealtyComplex',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.CharField(blank=True, max_length=255, null=True, verbose_name='Полный адрес')),
                ('google_maps_url', models.URLField(default='https://google.com', verbose_name='Ссылка на google maps')),
                ('lat', models.CharField(blank=True, max_length=20, null=True, verbose_name='Широта')),
                ('lng', models.CharField(blank=True, max_length=20, null=True, verbose_name='Долгота')),
                ('year_built', models.IntegerField(blank=True, null=True, verbose_name='Год постройки')),
                ('floors', models.CharField(blank=True, max_length=80, null=True, verbose_name='Количество Этажей')),
                ('area', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='properites.Area', verbose_name='Район')),
                ('city', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='properites.City', verbose_name='Город')),
                ('region', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='properites.Region', verbose_name='Регион')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Добавил')),
            ],
            options={
                'verbose_name_plural': 'Жилые комплексы',
                'verbose_name': 'Жилой комплекс',
            },
        ),
        migrations.CreateModel(
            name='RealtyObject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_created=True, verbose_name='Добавлено')),
                ('photo', models.TextField(blank=True, null=True, verbose_name='Фото')),
                ('info', models.TextField(blank=True, null=True)),
                ('site_url', models.URLField(blank=True, null=True, verbose_name='URL на сайте размещения')),
                ('site_id', models.CharField(blank=True, max_length=80, null=True, verbose_name='ID на сайте размещения')),
                ('rent_available', models.BooleanField(default=False, verbose_name='Возможна аренда')),
                ('rooms_count', models.IntegerField(blank=True, null=True, verbose_name='Количество комнат')),
                ('flat_number', models.CharField(help_text='0 если это дом', max_length=80, verbose_name='Номер квартиры')),
                ('square', models.CharField(blank=True, max_length=80, null=True, verbose_name='Площадь')),
                ('rent_price_eur', models.IntegerField(blank=True, null=True, verbose_name='Стоимость аренды в EUR')),
                ('floor', models.IntegerField(blank=True, null=True, verbose_name='Этаж')),
                ('additional_info', models.ManyToManyField(blank=True, null=True, to='properites.AdditionalInfo', verbose_name='Доп инфо')),
                ('agency', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='profiles.RealtyAgency', verbose_name='Агентство')),
                ('custom_description', models.ManyToManyField(blank=True, null=True, to='properites.CustomDescription', verbose_name='Кастомные поля')),
                ('energy_class', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='properites.EnergyClass', verbose_name='Класс энергоэффективности')),
                ('heating', models.ManyToManyField(blank=True, null=True, to='properites.HeatingInfo', verbose_name='Отопление')),
                ('kitchen', models.ManyToManyField(blank=True, null=True, to='properites.KitchenInfo', verbose_name='Кухня')),
                ('object_info', models.ManyToManyField(blank=True, null=True, to='properites.ObjectInfo', verbose_name='инфраструктура')),
                ('realty_complex', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='realty.RealtyComplex', verbose_name='Комплекс/Сите')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Добавил')),
                ('wc', models.ManyToManyField(blank=True, null=True, to='properites.WCInfo', verbose_name='Туалет')),
            ],
            options={
                'verbose_name_plural': 'Объекты недвижимости',
                'verbose_name': 'Объект недвижимости',
            },
            bases=(models.Model, core.mixins.model_mixins.ModelDiffMixin),
        ),
    ]
