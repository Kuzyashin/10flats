version: '3'
volumes:
  db:
services:
  postgres:
    image: postgres
    env_file:
      - prod.env
    volumes:
      - db:/var/lib/postgresql/data
    ports:
      - 5432:5432
  python: &python
    build:
      context: .
      dockerfile: docker/prod/python/Dockerfile
    env_file:
      - prod.env
    environment:
      - DJANGO_SETTINGS_MODULE=project.settings
      - PYTHONUNBUFFERED=1
    volumes:
      - ./project:/project
    ports:
      - 8000:8000
    command: >
      sh -c "python manage.py collectstatic --noinput &&
             python manage.py makemigrations --noinput &&
             python manage.py migrate --noinput &&
             gunicorn -t 300 -w 4 project.wsgi -b 0.0.0.0:8000"
    depends_on:
      - postgres
      - rabbitmq
  rabbitmq:
    restart: always
    image: rabbitmq:3.7-alpine
    depends_on:
      - postgres
  daphne:
    <<: *python
    restart: always
    command: daphne project.asgi:application --bind 0.0.0.0 --port 9000 --verbosity 1
    ports:
      - 9000:9000
    depends_on:
      - postgres
      - rabbitmq
      - python
  celery_worker:
    <<: *python
    restart: always
    command: python manage.py celeryd --concurrency=1 --pidfile=/pids/celeryd.pid --logfile=/logs/celeryd.log
    ports: []
    volumes:
      - ./project/pids:/pids
      - ./project/logs:/logs
    depends_on:
      - rabbitmq
      - postgres
      - python
      - daphne
  celery_worker_2:
    <<: *python
    restart: always
    command: python manage.py celeryd --concurrency=1 --pidfile=/pids/celeryd_2.pid --logfile=/logs/celeryd_2.log
    ports: []
    volumes:
      - ./project/pids:/pids
      - ./project/logs:/logs
    depends_on:
      - rabbitmq
      - postgres
      - python
      - daphne
  celery_beat:
    <<: *python
    restart: always
    command: python manage.py celery beat --pidfile=/pids/celerybeat.pid --logfile=/logs/celery_beat.log
    ports: []
    volumes:
      - ./project/pids:/pids
      - ./project/logs:/logs
    depends_on:
      - rabbitmq
      - postgres
      - python
      - daphne
      - celery_worker
      - celery_worker_2
  celery_cam:
    <<: *python
    restart: always
    command: python manage.py celerycam --frequency=10.0 --pidfile=/pids/celerycam.pid --logfile=/logs/celery_cam.log
    ports: []
    volumes:
      - ./project/pids:/pids
      - ./project/logs:/logs
    depends_on:
      - rabbitmq
      - postgres
      - python
      - daphne
      - celery_worker
      - celery_worker_2
      - celery_beat
  nginx:
    image: nginx
    restart: always
    build:
      context: .
      dockerfile: docker/prod/nginx/Dockerfile
    volumes:
      - ./project/public/:/public
      - ./project/logs/:/logs
    depends_on:
      - rabbitmq
      - postgres
      - python
      - daphne
    ports:
      - 80:80
